{"ast":null,"code":"var _jsxFileName = \"/Users/lievin/dev/nft-market/frontend/src/pages/Explore.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Cards from \"../components/nft/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExplorePage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedNfts, setLoadedNfts] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"http://localhost:8000/nfts\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      const nfts = [];\n\n      for (const key in data) {\n        const nft = { ...data[key]\n        };\n        nfts.push(nft);\n      }\n\n      setIsLoading(false);\n      setLoadedNfts(nfts);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      nfts: loadedNfts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExplorePage, \"8zTEqh971a+bnvM0m9MsuNo+dbo=\");\n\n_c = ExplorePage;\nexport default ExplorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExplorePage\");","map":{"version":3,"sources":["/Users/lievin/dev/nft-market/frontend/src/pages/Explore.js"],"names":["useState","useEffect","Cards","ExplorePage","isLoading","setIsLoading","loadedNfts","setLoadedNfts","fetch","headers","then","response","json","data","nfts","key","nft","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,YAAP;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADyB,KAA/B,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAPH,EAQGF,IARH,CAQSG,IAAD,IAAU;AACd,YAAMC,IAAI,GAAG,EAAb;;AACA,WAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtB,cAAMG,GAAG,GAAG,EACV,GAAGH,IAAI,CAACE,GAAD;AADG,SAAZ;AAGAD,QAAAA,IAAI,CAACG,IAAL,CAAUD,GAAV;AACD;;AAEDX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAACO,IAAD,CAAb;AACD,KAnBH;AAoBD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAIV,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEE;AAAb;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA9CQH,W;;KAAAA,W;AAgDT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nimport Cards from \"../components/nft/Cards\";\n\nfunction ExplorePage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedNfts, setLoadedNfts] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"http://localhost:8000/nfts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        const nfts = [];\n        for (const key in data) {\n          const nft = {\n            ...data[key],\n          };\n          nfts.push(nft);\n        }\n\n        setIsLoading(false);\n        setLoadedNfts(nfts);\n      });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section>\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section>\n      <div>\n        <h1>Explore</h1>\n      </div>\n      <Cards nfts={loadedNfts} />\n    </section>\n  );\n}\n\nexport default ExplorePage;\n"]},"metadata":{},"sourceType":"module"}
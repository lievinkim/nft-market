{"ast":null,"code":"var _jsxFileName = \"/Users/lievin/dev/nft-market/frontend/src/pages/NftMinting.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NftMintingPage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedNft, setLoadedNft] = useState(); // const navigate = useNavigate();\n\n  function mintNftHandler() {\n    setIsLoading(true);\n    const url = \"http://localhost:8000/nfts/mint/\";\n    const owner = \"1234\";\n    fetch(url + owner, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setIsLoading(false);\n      setLoadedNft(data); // navigate(\"/\");\n    });\n  }\n\n  let content;\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Minting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else if (loadedNft) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uB984 : \", loadedNft.name, \" / \", loadedNft.nameEng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBC88\\uD638 : \", loadedNft.sheetId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD76C\\uADC0\\uB3C4 : \", loadedNft.rarity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC774\\uB984 : /\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBC88\\uD638 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD76C\\uADC0\\uB3C4 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"services\",\n    children: \"SERVICES\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NftMintingPage, \"LbKTvQOsn4HChInlqs7/RS2RHrg=\");\n\n_c = NftMintingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftMintingPage\");","map":{"version":3,"sources":["/Users/lievin/dev/nft-market/frontend/src/pages/NftMinting.js"],"names":["useState","NftMintingPage","isLoading","setIsLoading","loadedNft","setLoadedNft","mintNftHandler","url","owner","fetch","method","headers","then","response","json","data","content","name","nameEng","sheetId","rarity"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C,CAFuC,CAIvC;;AAEA,WAASM,cAAT,GAA0B;AACxBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMI,GAAG,GAAG,kCAAZ;AACA,UAAMC,KAAK,GAAG,MAAd;AAEAC,IAAAA,KAAK,CAACF,GAAG,GAAGC,KAAP,EAAc;AACjBE,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFQ,KAAd,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KARH,EASGF,IATH,CASSG,IAAD,IAAU;AACdZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACU,IAAD,CAAZ,CAFc,CAGd;AACD,KAbH;AAcD;;AAED,MAAIC,OAAJ;;AAEA,MAAId,SAAJ,EAAe;AACbc,IAAAA,OAAO,gBACL;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO,IAAIZ,SAAJ,EAAe;AACpBY,IAAAA,OAAO,gBACL;AAAA,8BACE;AAAA,sCACQZ,SAAS,CAACa,IADlB,SAC2Bb,SAAS,CAACc,OADrC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,sCAASd,SAAS,CAACe,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,4CAAUf,SAAS,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVM,MAUA;AACLJ,IAAAA,OAAO,gBACL;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,sBAAO;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxDuBf,c;;KAAAA,c","sourcesContent":["import { useState } from \"react\";\nimport \"../App.css\";\n\nexport default function NftMintingPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedNft, setLoadedNft] = useState();\n\n  // const navigate = useNavigate();\n\n  function mintNftHandler() {\n    setIsLoading(true);\n\n    const url = \"http://localhost:8000/nfts/mint/\";\n    const owner = \"1234\";\n\n    fetch(url + owner, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setIsLoading(false);\n        setLoadedNft(data);\n        // navigate(\"/\");\n      });\n  }\n\n  let content;\n\n  if (isLoading) {\n    content = (\n      <div>\n        <p>Minting...</p>\n      </div>\n    );\n  } else if (loadedNft) {\n    content = (\n      <div>\n        <p>\n          이름 : {loadedNft.name} / {loadedNft.nameEng}\n        </p>\n        <p>번호 : {loadedNft.sheetId}</p>\n        <p>희귀도 : {loadedNft.rarity}</p>\n      </div>\n    );\n  } else {\n    content = (\n      <div>\n        <p>이름 : /</p>\n        <p>번호 : </p>\n        <p>희귀도 : </p>\n      </div>\n    );\n  }\n  return <h1 className=\"services\">SERVICES</h1>;\n}\n"]},"metadata":{},"sourceType":"module"}